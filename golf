#include <iostream>
#include <fstream>
#include <sstream>
#include <map>
#include <vector>

using namespace std;

struct Round {
    string name;  // Player's name
    int score;    // Score
};

bool processFile(const string& filename, map<string, map<string, vector<Round>>>& data) {
    ifstream file(filename);
    if (!file) {
        cerr << "Error: The specified file cannot be opened!" << endl;
        return false;
    }

    string line;
    while (getline(file, line)) {
        stringstream ss(line);
        string location, golfClub, player, scoreStr;
        int score;

        // Parse the line using ';' as a delimiter
        if (!getline(ss, location, ';') || !getline(ss, golfClub, ';') ||
            !getline(ss, player, ';') || !getline(ss, scoreStr, ';')) {
            cerr << "Error: The specified file has an erroneous line!" << endl;
            return false;
        }

        // Trim spaces
        location.erase(0, location.find_first_not_of(" \t\r\n"));
        golfClub.erase(0, golfClub.find_first_not_of(" \t\r\n"));
        player.erase(0, player.find_first_not_of(" \t\r\n"));
        scoreStr.erase(0, scoreStr.find_first_not_of(" \t\r\n"));

        // Ensure no field is empty
        if (location.empty() || golfClub.empty() || player.empty() || scoreStr.empty()) {
            cerr << "Error: A line has an empty value!" << endl;
            return false;
        }

        // Convert score to integer
        try {
            score = stoi(scoreStr);
        } catch (...) {
            cerr << "Error: Invalid score format!" << endl;
            return false;
        }

        // Store the data using the Round struct
        data[location][golfClub].push_back({player, score});
    }
    file.close();
    return true;
}

void displayData(const map<string, map<string, vector<Round>>>& data) {
    for (const auto& location : data) {
        cout << location.first << endl;  // Print location

        for (const auto& club : location.second) {
            cout << "  " << club.first << endl;  // Print golf club

            for (const auto& round : club.second) {
                cout << "    " << round.name << " " << round.score << endl;
            }
        }
    }
}

int main() {
    string filename;
    cout << "Input file: ";
    cin >> filename;

    map<string, map<string, vector<Round>>> data;

    if (!processFile(filename, data)) {
        return EXIT_FAILURE;
    }

    displayData(data);
    return EXIT_SUCCESS;
}
